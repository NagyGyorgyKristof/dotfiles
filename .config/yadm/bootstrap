#!/bin/bash

printf "=== Starting bootstrap ===\n\n"

ORIGINAL_WORKING_DIR=$(pwd)
cd $HOME

SYSTEM_TYPE=$(uname -s)

OH_MY_ZSH_ROOT="$HOME/.oh-my-zsh"
OH_MY_ZSH_CUSTOM="$OH_MY_ZSH_ROOT/custom"
OH_MY_ZSH_PLUGINS="$OH_MY_ZSH_CUSTOM/plugins"

YADM_SSH_URL="git@github.com:NagyGyorgyKristof/dotfiles.git"

confirm() {
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case "$response" in
    	[yY][eE][sS]|[yY])
true
;;
*)
false
;;
esac
}

if [ "$SYSTEM_TYPE" = "Darwin" ]; then
	echo "-> macOs detected"
	echo "-> Checking system dependencies..."

    echo " -> Install Homebrew package manager"

    #Install home-brew
    if [[ $(command -v brew) == "" ]]; then
        echo " ->Installing Hombrew..."
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        echo "Updating Homebrew"
        brew update
    fi

        # Install zsh
    	echo "  -> Installing zsh..."
    	brew install zsh
    	chsh -s /bin/zsh

    echo "-> Checking zsh dependencies..."

    # Install Oh-My-Zsh
    if [ ! -f "$OH_MY_ZSH_ROOT/oh-my-zsh.sh" ]; then
    	echo "  -> Installing Oh My Zsh..."
    	sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    else
    	echo "  -> Oh My Zsh already installed"
    fi

    # Install zsh-nvm
    if [ ! -d "$OH_MY_ZSH_PLUGINS/zsh-nvm" ]; then
    	echo "  -> Installing zsh-nvm..."
    	git clone https://github.com/lukechilds/zsh-nvm $OH_MY_ZSH_PLUGINS/zsh-nvm
    else
    	echo "  -> zsh-nvm already installed"
    fi

    # Install zsh-autosuggestions
    if [ ! -d "$OH_MY_ZSH_PLUGINS/zsh-autosuggestions" ]; then
    	echo "  -> Installing zsh-autosuggestions..."
    	git clone https://github.com/zsh-users/zsh-autosuggestions $OH_MY_ZSH_PLUGINS/zsh-autosuggestions
    else
    	echo "  -> zsh-autosuggestions already installed"
    fi

    # Install zsh-syntax-highlighting
    if [ ! -d "$OH_MY_ZSH_PLUGINS/zsh-syntax-highlighting" ]; then
    	echo "  -> Installing zsh-syntax-highlighting..."
    	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $OH_MY_ZSH_PLUGINS/zsh-syntax-highlighting
    else
    	echo "  -> zsh-syntax-highlighting already installed"
    fi

    #Install powerlevel10k
    if [ ! -d "$OH_MY_ZSH_CUSTOM/themes/powerlevel10k" ]; then
    	echo "  -> Installing powerlevel9k..."
    	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $OH_MY_ZSH_CUSTOM/themes/powerlevel10k
    else

    	echo "  -> powerlevel10k already installed"
    fi

     echo " -> Install esential applications"

    # Install gpg
    if [ ! command -v gpg > /dev/null 2>&1 ]; then
        echo "  -> Installing gpg..."
        brew install gpg
    else
        echo "  -> zsh already installed..."
    fi

    #Install iterm2
    if [ ! -d '/Applications/iTerm.app' -a ! -d "$HOME/Applications/iTerm.app" ]; then
        echo "  -> Installing iterm2..."
        brew cask install iterm2
        echo "  -> Load preferences..."

        defaults write com.googlecode.iterm2 "PrefsCustomFolder" -string "$HOME/.config/iterm"
        defaults write com.googlecode.iterm2 "LoadPrefsFromCustomFolder" -bool true
    else 
        echo "  -> iterm2 already installed"
    fi

    #Install sublime-text
    if [ ! -d '/Applications/Sublime Text.app' -a ! -d "$HOME/Applications/Sublime Text.app" ]; then
    	echo "  -> Installing sublime..."
        brew cask install sublime-text
        ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/
    else 
        echo "  -> sublime already installed"
    fi

        #Install lf
    echo "  -> Installing lf..."
    brew install lf
    

    #Install appcleaner
     echo" -> Install appcleaner"
     brew cask install appcleaner
    

     #Install jetbrains-toolbox
     echo" -> Install  jetbrains-toolbox"
     brew cask install  jetbrains-toolbox
  

    #Install google-chrome
     echo" -> Install  google-chrome"
     brew cask install  google-chrome
  

     #Install franz
     echo" -> Install franz"
     brew cask install franz
    

    #source macOs config
    confirm "-> Change macOs default settings? [y/n]" && {
       printf "\n  -> Updating macOs default settings\n";
       source ~/.config/osx/macos.sh
    }

fi

if [ -f "$HOME/.config/yadm/files.gpg" ]; then
	confirm "-> Decrypt files? [y/n]" && {
		printf "\n  -> Decrypting files...\n";
		yadm decrypt;
	}
fi

if [ ! "$(yadm remote get-url origin)" = "$YADM_SSH_URL" ]; then
	confirm "-> Change yadm URL to SSH? [y/n]" && {
		printf "\n  -> Updating the yadm repo origin URL\n";
		yadm remote set-url origin "$YADM_SSH_URL";
	}
fi

cd $ORIGINAL_WORKING_DIR

printf "\n=== Finished bootstrap ===\n"