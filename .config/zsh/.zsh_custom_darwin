
#encrypt
encrypt(){
	openssl des -in $1 -out "$1.enc"
}

# Start League Of Legends properly
lol () {
    cd '/Applications/League of Legends.app/Contents/LoL/'
    ./LeagueClient.app/Contents/MacOS/LeagueClient
}

#pi
pi () {
	ssh pi@rpi1
}

#open a file with EDITOR
open(){
	$EDITOR $1
}
#Decide whether an application is installed on macOs
whichapp() {
  local appNameOrBundleId=$1 isAppName=0 bundleId
  # Determine whether an app *name* or *bundle ID* was specified.
  [[ $appNameOrBundleId =~ \.[aA][pP][pP]$ || $appNameOrBundleId =~ ^[^.]+$ ]] && isAppName=1
  if (( isAppName )); then # an application NAME was specified
    # Translate to a bundle ID first.
    bundleId=$(osascript -e "id of application \"$appNameOrBundleId\"" 2>/dev/null) ||
      { echo "$FUNCNAME: ERROR: Application with specified name not found: $appNameOrBundleId" 1>&2; return 1; }
  else # a BUNDLE ID was specified
    bundleId=$appNameOrBundleId
  fi
    # Let AppleScript determine the full bundle path.
  fullPath=$(osascript -e "tell application \"Finder\" to POSIX path of (get application file id \"$bundleId\" as alias)" 2>/dev/null ||
    { echo "$FUNCNAME: ERROR: Application with specified bundle ID not found: $bundleId" 1>&2; return 1; })
  printf '%s\n' "$fullPath"
  # Warn about /Volumes/... paths, because applications launched from mounted
  # devices aren't persistently installed.
  if [[ $fullPath == /Volumes/* ]]; then
    echo "NOTE: Application is not persistently installed, due to being located on a mounted volume." >&2 
  fi
}

# java
alias j8="export JAVA_HOME=$(/usr/libexec/java_home -v 1.8.0_231)"
alias j11="export JAVA_HOME=$(/usr/libexec/java_home -v 11)"
#open zhsrc
alias zshrc="open $ZDOTDIR/.zshrc"

#open pentaho
pentaho(){
  j8
  cd Applications/data-integration/Data\ Integration.app/Contents/MacOS
  ./JavaApplicationStub
}
